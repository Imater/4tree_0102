// Generated by CoffeeScript 1.6.3
(function() {
  angular.module("4treeApp").directive("dateTimeInput", function($timeout, $compile) {
    return {
      restrict: "E",
      require: "?ngModel",
      scope: {},
      template: ' <div class="datetimeinput">' + '<div class="dt_wrap">' + '<i class="icon-up-dir"></i>' + '<input class="day" size="2" only-digits>' + '<i class="icon-down-dir"></i>' + '</div>' + '<div class="dt_wrap">' + '<i class="icon-up-dir"></i>' + '<input class="month" size="5">' + '<i class="icon-down-dir"></i>' + '</div>' + '<div class="dt_wrap">' + '<i class="icon-up-dir"></i>' + '<input class="year" size="4">' + '<i class="icon-down-dir"></i>' + '</div>' + '</div>',
      link: function(scope, el, attr, ngModel) {
        var charLimit, params, parseDateFromInput, renderDate;
        params = {
          key_code: {
            up: 38,
            down: 40
          },
          month_names: ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'],
          keys: [8, 9, 19, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 144, 145]
        };
        renderDate = function(el, viewValue) {
          var date;
          date = new Date(viewValue);
          el.find('.day').val(date.getDate() || "");
          el.find('.month').val(params.month_names[date.getMonth()] || "");
          return el.find('.year').val(date.getFullYear() || "");
        };
        ngModel.$render = function() {
          return renderDate(el, ngModel.$modelValue);
        };
        scope.$watch(function() {
          return ngModel.$modelValue;
        }, function() {
          return renderDate(el, ngModel.$modelValue);
        });
        parseDateFromInput = function(el) {
          var day, found_month_key, month, substr_month, year;
          day = el.find('.day').val();
          month = el.find('.month').val();
          year = el.find('.year').val();
          day = parseInt(day);
          substr_month = month.substr(0, 4);
          found_month_key = new Date().getMonth();
          month = _.find(params.month_names, function(month, key) {
            if (substr_month.indexOf(month.substr(0, 4)) !== -1) {
              return found_month_key = key;
            }
          });
          year = parseInt(year);
          return new Date(year, found_month_key, day);
        };
        el.on('keyup', 'input', function(e) {
          if (e.which === 13) {
            return angular.element('.month').focus();
          }
        });
        el.on('blur', 'input', function(e) {
          var parsed_date;
          parsed_date = parseDateFromInput(el);
          if (_.isDate(parsed_date)) {
            return scope.$apply(function() {
              return ngModel.$setViewValue(new Date(parsed_date));
            });
          }
        });
        charLimit = 2;
        el.on('keyup', '.day', function(e) {
          if (e.which === 8 && this.value.length === 0) {

          } else if ($.inArray(e.which, params.keys) >= 0) {
            true;
          } else if (this.value.length >= charLimit && this.value <= 31 && !e.shiftKey && e.which !== 16 && e.which !== 9) {
            angular.element('.month').focus();
            $timeout(function() {
              return angular.element('.month').select();
            });
            false;
          } else {
            if (e.shiftKey || e.which <= 48 || e.which >= 58) {
              false;
            }
          }
        });
        return el.on('keydown', 'input', function(e) {
          var date, dt;
          if (e.keyCode === params.key_code.up) {
            e.preventDefault();
            e.stopPropagation();
            date = ngModel.$modelValue;
            if ($(this).hasClass('day')) {
              dt = new Date(date).getTime();
              scope.$apply(function() {
                return ngModel.$setViewValue(new Date(dt + 24 * 60 * 60 * 1000));
              });
            }
            if ($(this).hasClass('month')) {
              dt = new Date(date);
              scope.$apply(function() {
                return ngModel.$setViewValue(new Date(dt.setMonth(dt.getMonth() + 1)));
              });
            }
            if ($(this).hasClass('year')) {
              dt = new Date(date);
              scope.$apply(function() {
                return ngModel.$setViewValue(new Date(dt.setFullYear(dt.getFullYear() + 1)));
              });
            }
          }
          if (e.keyCode === params.key_code.down) {
            e.preventDefault();
            e.stopPropagation();
            date = ngModel.$modelValue;
            if ($(this).hasClass('day')) {
              dt = new Date(date).getTime();
              scope.$apply(function() {
                return ngModel.$setViewValue(new Date(dt - 24 * 60 * 60 * 1000));
              });
            }
            if ($(this).hasClass('month')) {
              dt = new Date(date);
              scope.$apply(function() {
                return ngModel.$setViewValue(new Date(dt.setMonth(dt.getMonth() - 1)));
              });
            }
            if ($(this).hasClass('year')) {
              dt = new Date(date);
              return scope.$apply(function() {
                return ngModel.$setViewValue(new Date(dt.setFullYear(dt.getFullYear() - 1)));
              });
            }
          }
        });
      }
    };
  });

}).call(this);
