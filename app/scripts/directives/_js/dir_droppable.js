// Generated by CoffeeScript 1.6.3
(function() {
  var strVar;

  angular.module("4treeApp").directive("myDraggable", function() {
    return {
      link: function(scope, el, attrs) {
        el.draggable({
          connectToSortable: attrs.myDraggable,
          helper: "clone",
          appendTo: "#w_main",
          distance: 10,
          stop: function(event, ui) {
            return console.info('draggable stop', ui);
          }
        });
        el.disableSelection();
      }
    };
  });

  angular.module("4treeApp").directive("myTree8", function() {
    return {
      restrict: "A",
      scope: {
        tree: '=',
        fn: '=',
        set: '=',
        db: '=',
        panel_id: '=panelid'
      },
      replace: true,
      transclude: false,
      templateUrl: "views/subviews/view_one_line0.html",
      link: function($scope, $element, $attributes) {}
    };
  });

<<<<<<< HEAD
  strVar = "";

  strVar += "  <div class=\"tree_tmpl\" my-draggable=\".sortable\" data-id=\"{{tree._id}}\">";

  strVar += "    <div ng-controller=\"save_tree_db\" class=\"tree_wrap\" ng-class=\"{open:tree.panel[panel_id]._open, folder:tree._childs, active:(db.main_node[panel_id]._id==tree._id)}\" ng-click=\"db.main_node[panel_id] = tree\">";

  strVar += "        <div class=\"col1\">";

  strVar += "          <div class=\"is_folder\" ng-click=\"tree.panel[panel_id]._open=!tree.panel[panel_id]._open\"><\/div>";

  strVar += "        <\/div>";

  strVar += "        <div class=\"col2\" title=\"{{tree._childs}}\" ng-click=\"set.main_parent_id[panel_id] = tree._id\" style=\"background:{{tree.color}};\" ng-class=\"{tree_new:tree._new}\">";

  strVar += "          <i class=\"{{fn.service.db_tree.getIcon(tree)}}\" style=\"color: {{tree.icon_color}};\"><\/i>";

  strVar += "        <\/div>";

  strVar += "        <div class=\"col3\">";

  strVar += "            <div class=\"title\">";

  strVar += "                 <span contenteditable=\"true\" ng-model=\"tree.title\" focus-me=\"tree._focus_me\" hotkey=\"{'Enter':fn.service.db_tree.jsEnterPress,'Esc':fn.service.db_tree.jsEscPress}\" ng-blur=\"fn.service.db_tree.jsBlur($event, undefined, tree)\" tabindex=\"-1\"><\/span>";

  strVar += "                 <span class=\"cnt\" ng-if=\"tree._childs\">({{tree._childs}})<\/span>";

  strVar += "            <\/div>    ";

  strVar += "        <\/div>        ";

  strVar += "        <div class=\"col4\" ng-click=\"fn.service.db_tree.jsAddNote(tree); $event.stopPropagation();\">";

  strVar += "          <div class=\"col4table\">";

  strVar += "            <i class=\"icon-plus\"><\/i>";

  strVar += "          <\/div>";

  strVar += "        <\/div>";

  strVar += "    <\/div>";

  strVar += "  <\/div>";

  angular.module("4treeApp").directive("member", function($compile, $rootScope, $timeout) {
=======
  angular.module("4treeApp").directive("member", function($compile, $rootScope) {
>>>>>>> parent of b410692... Ускорил
    return {
      restrict: 'E',
      replace: true,
      transclude: true,
      scope: {
        tree: '=member',
        fn: '=',
        db: '=',
        set: '=',
        panel_id: '=panelid'
      },
      templateUrl: 'views/subviews/view_one_line0.html',
      link: function(scope, element, attrs) {
<<<<<<< HEAD
        console.time('treeRenderTime');
        $timeout(function() {
          return console.timeEnd('treeRenderTime');
        });
        return scope.$watch('tree.panel[' + scope.panel_id + ']._open', function(newVal, oldVal) {
          console.info('change', newVal);
          if (newVal !== oldVal) {
            if (scope.tree._childs > 0 && scope.tree.panel[scope.panel_id]._open) {
              element.append('<my-tree-childs tree="fn.service.db_tree.jsFindByParent(tree._id)" fn="fn" set="set" db="db" panelid="panel_id"></my-tree-childs>');
              return $compile(element.contents())(scope);
            }
          }
        });
=======
        var elements;
        if (scope.tree._childs > 0 && scope.tree.panel[1]._open && (elements = $rootScope.$$childTail.fn.service.db_tree.jsFindByParent(scope.tree._id))) {
          element.append('<my-tree-childs tree="fn.service.db_tree.jsFindByParent(tree._id)" fn="fn" set="set" db="db" panelid="panel_id"></my-tree-childs>');
          return $compile(element.contents())(scope);
        }
>>>>>>> parent of b410692... Ускорил
      }
    };
  });

  angular.module("4treeApp").directive("myTreeChilds", function($compile) {
    return {
      restrict: "E",
      scope: {
        tree: '=',
        fn: '=',
        db: '=',
        set: '=',
        panel_id: '=panelid'
      },
      replace: true,
      transclude: true,
      template: "<ul><member member='note' fn='fn' set='set' db='db' panelid='panel_id' ng-repeat='note in tree'></member></ul>",
      link: function($scope, $element, $attributes) {}
    };
  });

  angular.module("4treeApp").directive("mySortable", function() {
    return {
      require: "?ngModel",
      link: function(scope, el, attrs) {
        el.sortable({
          revert: false,
          distance: 10
        });
        el.disableSelection();
        el.on("sortstart", function(event, ui) {
          console.info('start', ui.item[0].dataset.id);
          $(this).data().sort_id = ui.item[0].dataset.id;
          return $(".tree_tmpl[data-id='" + $(this).data().sort_id + "']").addClass('drag_now');
        });
        el.on("sortbeforestop", function(event, ui) {
          var from, from_data_id, to, to_data_parent_id;
          event.stopPropagation();
          event.preventDefault();
          from_data_id = $(this).data().sort_id;
          $(".tree_tmpl[data-id='" + $(this).data().sort_id + "']").removeClass('drag_now');
          from = angular.element(ui.item).scope().$index;
          to = el.children().index(ui.item);
          to = angular.element(event.target).children("[data-id='" + from_data_id + "']").index();
          to_data_parent_id = angular.element(this).attr('data-parent-id');
          console.info("FROM", from_data_id, "TO", to_data_parent_id);
          if (to >= 0) {
            scope.$apply(function() {
              if (from >= 0 || true) {
                console.info('sorted', {
                  to: to,
                  from: from
                }, angular.element(ui.item).scope().tree);
                scope.$emit("my-sorted", {
                  from: from,
                  to: to,
                  from_id: from_data_id,
                  to_id: to_data_parent_id
                });
              } else {
                console.info('created', {
                  to: to
                });
                scope.$emit("my-created", {
                  to_id: to_data_parent_id,
                  to_index: to,
                  name: ui.item.text()
                });
                ui.item.remove();
              }
            });
          }
        });
      }
    };
  });

}).call(this);
