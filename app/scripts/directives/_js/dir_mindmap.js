// Generated by CoffeeScript 1.6.3
(function() {
  angular.module("4treeApp").directive("plumbConnect", function($timeout) {
    return {
      replace: true,
      require: "?ngModel",
      link: function(scope, element, attrs, ngModel) {
        var parent_element;
        parent_element = $(element).parents("li:first").parents("li:first").find('.title');
        console.info(parent_element.attr('class'));
        jsPlumb.Defaults.DragOptions = {
          cursor: 'pointer',
          zIndex: 2000
        };
        jsPlumb.Defaults.PaintStyle = {
          lineWidth: 1,
          strokeStyle: "#888"
        };
        jsPlumb.Defaults.Connector = [
          "Bezier", {
            curviness: 30
          }
        ];
        jsPlumb.Defaults.Endpoint = [
          "Blank", {
            radius: 5
          }
        ];
        jsPlumb.Defaults.EndpointStyle = {
          fillStyle: "#567567"
        };
        if (parent_element.length && false) {
          $timeout(function() {
            return jsPlumb.connect({
              source: parent_element,
              target: element,
              paintStyle: {
                lineWidth: 1,
                strokeStyle: "#888"
              },
              anchors: [[0, 0.5, -1, 0, 1, -1], [0, 0, 0, 0, 0, 0]]
            });
          }, 0);
        }
        element.on('$destroy', function() {
          return console.info('destroy ' + attrs.id);
        });
      }
    };
  });

  if (false) {
    jsPlumb.makeTarget(element, {
      anchor: "Continuous",
      maxConnections: 2
    });
    jsPlumb.draggable(element, {
      containment: "parent"
    });
    element.bind("dblclick", function(e) {
      jsPlumb.detachAllConnections($(this));
      $(this).remove();
      e.stopPropagation();
      scope.$parent.removeState(attrs.identifier);
      scope.$parent.$digest();
    });
  }

}).call(this);
